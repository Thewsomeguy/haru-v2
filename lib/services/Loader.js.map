{"version":3,"sources":["services/Loader.es6"],"names":[],"mappings":"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","file":"services/Loader.js","sourcesContent":["import chalk from 'chalk'\nimport path from 'path'\nimport fs from 'fs'\nimport { Client as Discord } from 'discord.js'\nimport { EventEmitter } from 'events'\nimport rq from 'require-all'\n\nimport MessageHandler from './MessageHandler'\n\nclass Loader extends EventEmitter {\n  constructor (container) {\n    super()\n    this.container = container\n    this.logger = container.get('logger')\n    this.loaded = {\n      discord: false,\n      clients: false,\n      config: false\n    }\n    this.on('loaded', () => {\n      this.checkLoaded.bind(this)\n    })\n    this.failCheck = setTimeout(this.checkLoaded.bind(this), 30000)\n  }\n\n  start () {\n    this.loadDiscord()\n    this.on('loaded.discord', () => {\n      this.loadClients()\n    })\n  }\n\n  get isLoaded () {\n    return this.loaded.discord && this.loaded.clients && this.loaded.config\n  }\n\n  setLoaded (type) {\n    this.loaded[type] = true\n    this.emit('loaded.' + type)\n    this.emit('loaded')\n  }\n\n  checkLoaded (fail) {\n    this.emit('checkLoaded')\n    fail = typeof fail !== 'undefined'\n    if (fail) {\n      throw new Error(`Failed initialising. Loaded: ${JSON.stringify(this.loaded, null, 2)}`)\n    }\n    this.logger.debug('Loader status:', {\n      Ready: this.isLoaded,\n      Discord: this.loaded.discord,\n      Clients: this.loaded.clients\n    })\n\n    clearTimeout(this.failCheck)\n    delete this.failCheck\n  }\n\n  loadDiscord () {\n    let token = this.container.getParam('token')\n    let client = new Discord({ autoReconnect: true })\n    let handler = new MessageHandler(this.container, client)\n\n    client.on('ready', () => {\n      this.container.set('discord', client)\n      this.container.set('handler', handler)\n      this.setLoaded('discord')\n      let admins = this.container.getParam('admins')\n      if (typeof admins !== 'undefined') {\n        client.admins = admins\n      }\n      this.logger.info(\n        `Connecting as ${chalk.red(client.user.name)} <@${client.user.id}>`\n      )\n      this.logger.info(\n        `${client.servers.length} servers and ` +\n        `${client.users.length} users in cache`\n      )\n      this.logger.info(`Prefix: '${this.container.getParam('prefix')}'`)\n    })\n    client.on('error', err => this.logger.error(err))\n    client.on('warn', warn => this.logger.warn(warn))\n    client.on('disconnect', () => {\n      this.logger.info(`${chalk.red(client.user.name)} has been disconnected`)\n    })\n    if (this.container.getParam('debug') === true) {\n      client.on('debug', msg => this.logger.debug(msg))\n    }\n\n    client.on('message', msg => handler.handle(msg))\n\n    client.loginWithToken(token)\n    .catch(err => this.logger.error('Error connecting with token', err))\n  }\n\n  loadClients () {\n    let clients = rq(path.join(process.cwd(), 'lib/clients'))\n    for (let Client in clients) {\n      if (clients.hasOwnProperty(Client)) {\n        Client = clients[Client]\n        let client = new Client(this.container)\n        try {\n          client.run()\n        } catch (err) {\n          this.logger.error(`Error running client ${Client.name}`, err)\n        }\n        this.container.set(Client.name, client)\n      }\n    }\n    this.setLoaded('clients')\n  }\n}\n\nmodule.exports = Loader\n"],"sourceRoot":"/Users/AaronTua/Desktop/code/fuyu/src"}