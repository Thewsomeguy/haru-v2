{"version":3,"sources":["base/BaseCommand.es6"],"names":[],"mappings":"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","file":"base/BaseCommand.js","sourcesContent":["import moment from 'moment'\nimport _ from 'lodash'\nimport prettyjson from 'prettyjson'\n\nconst MESSAGE_CHAR_LIMIT = 2000\nconst MESSAGE_RATE_LIMIT = 10\n\nclass BaseCommand {\n  constructor (message, client, container) {\n    if (this.constructor === BaseCommand) {\n      throw new Error('Can\\'t instantiate abstract command!')\n    }\n    this.message = message\n    this.client = client\n    this.container = container\n    this.logger = container.get('logger')\n    this.init()\n  }\n\n  init () {}\n\n  static get name () {\n    throw new Error('Commands must have names')\n  }\n\n  static get description () {\n    throw new Error('Commands must have descriptions')\n  }\n\n  static get aliases () {\n    return []\n  }\n\n  static get usage () {\n    return 'This command does not have a usage manual'\n  }\n\n  get hidden () {\n    return false\n  }\n\n  get adminOnly () {\n    return false\n  }\n\n  get noPrivate () {\n    return false\n  }\n\n  get server () {\n    return this.message.channel.server\n  }\n\n  get channel () {\n    return this.message.channel\n  }\n\n  get time () {\n    return moment(this.message.timestamp).format('HH:mm:ss')\n  }\n\n  get sender () {\n    return this.message.sender\n  }\n\n  get isBotMentioned () {\n    return this.rawContent.indexOf(this.prefix) === 0 ||\n      this.message.isMentioned(this.client.user) || this.isPM\n  }\n\n  get isEveryoneMentioned () {\n    return this.message.everyoneMentioned\n  }\n\n  get rawContent () {\n    return this.message.content\n  }\n\n  get content () {\n    let content = this.rawContent\n    content = _.trim(content.replace(\n      new RegExp(`^(${this.client.user.mention()})|(\\\\${this.prefix})`), ''\n    ))\n    return content\n  }\n\n  get isPM () {\n    return this.message.channel.isPrivate\n  }\n\n  get prefix () {\n    return this.container.getParam('prefix')\n  }\n\n  get mentions () {\n    let users = []\n    for (let idx in this.message.mentions) {\n      if (this.message.mentions.hasOwnProperty(idx)) {\n        let user = this.message.mentions[idx]\n        if (typeof user.id !== 'undefined' &&\n        typeof user.username !== 'undefined') {\n          users.push({\n            id: user.id,\n            name: user.username,\n            mention: user.mention\n          })\n        }\n      }\n    }\n\n    return users\n  }\n\n  get isAdmin () {\n    return this.client.admins.indexOf(this.sender.id) > -1\n  }\n\n  get user () {\n    return this.client.user\n  }\n\n  wrongUsage (name) {\n    this.reply(\n      `Please run \\`${this.prefix}help ${name}\\` to use this command properly`\n    )\n  }\n\n  reply (content, options) {\n    if (!this.isPM) {\n      content = `${this.sender.mention()}, ${content}`\n    }\n    return this.send(this.message, content, options)\n  }\n\n  send (dest, content, options = {delay: 0, deleteDelay: 0}) {\n    //  Not sure if destructuring works\n    let {delay, deleteDelay} = options\n    if (content.length > MESSAGE_RATE_LIMIT * MESSAGE_CHAR_LIMIT) {\n      return this.logger.error(\n        'Error sending a message larger than the character and rate limit\\n' +\n        content\n      )\n    }\n\n    if (delay) {\n      return setTimeout(() => {\n        this.send(dest, content, {delay: 0, deleteDelay})\n      }, delay)\n    }\n\n    let msgRem = ''\n    if (content.length > 2000) {\n      content = content.match(/.{1,20000}/g)\n      msgRem = content.shift()\n      content = content.join('')\n    }\n\n    return new Promise((res, rej) => {\n      this.client.sendMessage(dest, content, (err, msg) => {\n        if (err) return rej(err)\n\n        if (deleteDelay) {\n          this.client.deleteMessage(msg, {wait: deleteDelay}, err => {\n            if (err) return rej(err)\n            if (!msgRem) res(msg)\n          })\n\n          if (!msgRem) return\n        }\n\n        if (msgRem) {\n          return this.send(dest, msgRem, options)\n            .then(msg => {\n              return res(Array.isArray(msg) ? msg.concat(msg) : [msg])\n            })\n            .catch(rej)\n        }\n\n        res(msg)\n      })\n    })\n  }\n\n  upload (attachment, name, channel) {\n    channel = channel || this.channel\n    return new Promise((res, rej) => {\n      this.client.sendFile(channel, attachment, name)\n      .then(msg => res(msg))\n      .catch(err => rej(err))\n    })\n  }\n\n  handle () {\n    throw new Error('Commands must override message handler')\n  }\n\n  checkPrivateAndAdminOnly () {\n    if (this.noPrivate && this.isPM) {\n      this.reply('This command cannot be run via PMs.')\n      return false\n    }\n    if (this.adminOnly === true && !this.isAdmin) {\n      return false\n    }\n\n    return true\n  }\n\n  prettyPrint (regex, matches) {\n    let commandInfo = prettyjson.render({\n      Command: {\n        time: this.time,\n        sender: this.sender.username,\n        server: typeof this.server === 'undefined'\n          ? undefined : this.server.name,\n        channel: typeof this.channel === 'undefined'\n          ? undefined : this.channel.name,\n        content: this.content,\n        botMention: this.isBotMentioned,\n        pm: this.isPM,\n        regex: regex ? regex.toString() : '',\n        matches: matches,\n        mentions: this.mentions\n      }\n    })\n    return commandInfo\n  }\n\n  getMatches (content, regex, cb, noPrint) {\n    let matches = regex.exec(content)\n\n    if (matches === null || !this.checkPrivateAndAdminOnly()) {\n      return false\n    }\n\n    let result = cb(matches)\n\n    if (!noPrint && result !== false) {\n      this.logger.debug(`\\n${this.prettyPrint(regex, matches)}`)\n    }\n  }\n\n  hears (regex, callback) {\n    let noPrint = !this.container.get('debug')\n    return this.getMatches(this.rawContent, regex, callback, noPrint)\n  }\n\n  responds (regex, callback) {\n    if (!this.isBotMentioned) {\n      return\n    }\n    let noPrint = !this.container.get('debug')\n    return this.getMatches(this.content, regex, callback, noPrint)\n  }\n\n}\n\nmodule.exports = BaseCommand\n"],"sourceRoot":"/Users/AaronTua/Desktop/code/fuyu/src"}