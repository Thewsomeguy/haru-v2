{"version":3,"sources":["clients/Discordie.js"],"names":[],"mappings":"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","file":"clients/Discordie.js","sourcesContent":["import Discordie from 'discordie'\nimport chalk from 'chalk'\nimport _ from 'lodash'\nimport prettyjson from 'prettyjson'\nimport request from 'superagent'\nimport ytdl from 'ytdl-core'\nimport path from 'path'\n\nimport BaseClient from '../base/BaseClient'\nimport Stream from './.Music/Stream'\nimport YoutubeTrack from './.Music/YoutubeTrack'\nimport SoundcloudTrack from './.Music/SoundcloudTrack'\nimport FDB from '../../util/FlatDatabase'\n\nlet apiKeys = new FDB(path.join(process.cwd(), 'config/keys.json')).getAll()\n\nclass Disco extends BaseClient {\n  constructor (container) {\n    super(container)\n    this.streams = {}\n    this.logger = container.get('logger')\n  }\n\n  static get name () {\n    return 'discordie'\n  }\n\n  // Commands\n\n  prettify (content, id, prefix) {\n    return _.trim(content.replace(\n      new RegExp(`^(<@${id}>)|(\\\\${prefix})`), ''\n    ))\n  }\n\n  isBotMentioned (user, msg, prefix) {\n    return msg.content.indexOf(prefix) === 0 ||\n      user.isMentioned(msg) ||\n      !msg.guild\n  }\n\n  send (channel, content) {\n    let msgRem = ''\n    if (content.length > 20000) {\n      return this.logger.error(\n        'Error sending a message larger than the character and rate limit\\n' +\n        content\n      )\n    }\n    if (content.length > 2000) {\n      content = content.match(/.{1,20000}/g)\n      msgRem = content.shift()\n      content = content.join('')\n    }\n    return new Promise((res, rej) => {\n      channel.sendMessage(content)\n      .then(msg => {\n        if (msgRem) {\n          return this.send(channel, content)\n            .then(msg => {\n              return res(Array.isArray(msg) ? msg.concat(msg) : [msg])\n            })\n            .catch(rej)\n        }\n        res(msg)\n      })\n      .catch(rej)\n    })\n  }\n\n  reply (msg, content) {\n    return new Promise((res, rej) => {\n      msg.reply(content)\n      .then(res)\n      .catch(rej)\n    })\n  }\n\n  wrongUsage (msg, name) {\n    let prefix = this.container.getParam('prefix')\n    this.reply(msg,\n      `Please run \\`${prefix}help ${name}\\` to use this command properly`\n    )\n  }\n\n  prettyPrint (regex, matches) {\n    return prettyjson.render({\n      'Music Module (Discordie)': {\n        regex: regex ? regex.toString() : '',\n        matches: matches\n      }\n    }, {\n      dashColor: 'magenta',\n      keysColor: 'cyan'\n    })\n  }\n\n  responds (content, regex, cb) {\n    let matches = regex.exec(content)\n\n    if (matches === null) {\n      return false\n    }\n\n    let result = cb(matches)\n    let noPrint = !this.container.get('debug')\n    if (!noPrint && result !== false) {\n      this.logger.debug(`\\n${this.prettyPrint(regex, matches)}`)\n    }\n  }\n\n  // Music\n\n  queueYT (id, msg) {\n    this.streams[msg.guild.id].queue(new YoutubeTrack(\n      id, msg.author, this.logger, (err) => {\n        if (err) {\n          if (err.toString().indexOf('Code 150') > -1) {\n            this.send(msg.channel,\n              'This video is unavailable in the country I am running in. ' +\n              'Please try a different video.'\n            )\n          } else if (err.message ===\n            'Could not extract signature deciphering actions') {\n            this.send(msg.channel,\n              'YouTube streams have changed their formats. ' +\n              'Please get the admin to update `ytdl-core`.'\n            )\n          } else if (err.message === 'status code 404') {\n            this.send(msg.channel, 'That video does not exist.')\n          } else {\n            this.send(msg.channel,\n              'An error occurred while getting video information. ' +\n              'Please try a different video.'\n            )\n          }\n        }\n        this.streams[msg.guild.id].playlist.pop()\n      }\n    ))\n    let check = (vid, m) => {\n      if (vid.plays && vid.length) {\n        m.edit(\n          `:white_check_mark:  Queued ${vid.prettyPrint} - ${msg.author.mention}`\n        )\n        if (!this.streams[msg.guild.id].currentVideo) this.playNext(msg.guild)\n        return\n      } else {\n        setTimeout(() => check(vid, m), 3000)\n      }\n    }\n    msg.delete()\n    this.send(msg.channel, ':mag:  Queuing song...')\n    .then(msg => {\n      check(_.last(this.streams[msg.guild.id].playlist), msg)\n    })\n  }\n\n  queueSC (query, msg) {\n    query = query.split(' ').join('_')\n    let cid = apiKeys['soundcloud']\n    this.send(msg.channel, ':mag:  Queuing song...')\n    .then(msg => {\n      request\n      .get(`https://api.soundcloud.com/tracks/?client_id=${cid}&q=${query}`)\n      .end((err, res) => {\n        if (err) {\n          this.logger.error('Error occurred while fetching from SC', err)\n          return\n        }\n        if (res.statusCode === 200) {\n          if (typeof res.body[0] !== 'undefined') {\n            res = res.body[0]\n            let vid = new SoundcloudTrack({\n              addedBy: msg.author,\n              url: `https://api.soundcloud.com/tracks/${res.id}` +\n              `/stream?client_id=${cid}`,\n              title: res.title,\n              author: res.user.username,\n              length: res.duration,\n              plays: res.playback_count\n            }, this.logger)\n            this.streams[msg.guild.id].queue(vid)\n            msg.edit(`:white_check_mark:  Queued ${vid.prettyPrint}`)\n            if (!this.streams[msg.guild.id].currentVideo) {\n              this.playNext(msg.guild)\n            }\n            return\n          }\n          msg.edit(\n            `::negative_squared_cross_mark: :  Could not find any songs.`\n          )\n        }\n      })\n    })\n  }\n\n  playNext (guild) {\n    this.streams[guild.id].currentVideo = null\n    let stream = this.streams[guild.id]\n    if (stream && stream.playlist.length > 0) {\n      let vid = this.streams[guild.id].playlist.shift()\n      this.send(\n        this.streams[guild.id].text, `:loud_sound:  Playing ${vid.basicPrint}`\n      )\n      this.play(vid, guild, stream.voiceConnection)\n      this.streams[guild.id].currentVideo = vid\n    }\n  }\n\n  play (vid, guild, voice) {\n    return new Promise((res, rej) => {\n      if (vid instanceof YoutubeTrack) {\n        let onMediaInfo = (err, mediaInfo) => {\n          if (err) {\n            this.logger.error('[Discordie] ytdl produced an error:', err)\n            return\n          }\n          let formats = mediaInfo.formats.filter(f => f.container === 'webm')\n          .sort((a, b) => b.audioBitrate - a.audioBitrate)\n\n          let bestAudio = formats.find(f => f.audioBitrate > 0 && !f.bitrate) ||\n            formats.find(f => f.audioBitrate > 0)\n          if (!bestAudio) {\n            this.logger.info(chalk.cyan('[Discordie] No valid formats'))\n            return\n          }\n\n          let encoder = voice.voiceConnection.createExternalEncoder({\n            type: 'ffmpeg', source: bestAudio.url,\n            debug: true\n          })\n          encoder.once('end', () => {\n            this.send(\n              this.streams[guild.id].text,\n              `:speaker:  Finished playing ${vid.basicPrint}`\n            )\n            this.playNext(guild)\n          })\n          encoder.play()\n        }\n        try {\n          ytdl.getInfo(vid.url, onMediaInfo)\n        } catch (err) {\n          this.logger.error('[Discordie] ytdl produced an error:', err)\n          return rej(err)\n        }\n      } else if (vid instanceof SoundcloudTrack) {\n        let encoder = voice.voiceConnection.createExternalEncoder({\n          type: 'ffmpeg', source: vid.url,\n          debug: true\n        })\n        encoder.once('end', () => {\n          this.send(\n            this.streams[guild.id].text,\n            `:speaker:  Finished playing ${vid.basicPrint}`\n          )\n          this.playNext(guild)\n        })\n        encoder.play()\n      }\n      res()\n    })\n  }\n\n  run () {\n    let client = new Discordie()\n    client.connect({\n      token: this.container.getParam('token')\n    })\n\n    client.Dispatcher.on('GATEWAY_READY', e => {\n      this.logger.info(`Music module connected - ` +\n        `${chalk.green(client.User.username)}`)\n    })\n\n    client.Dispatcher.on('MESSAGE_CREATE', e => {\n      let prefix = this.container.getParam('prefix')\n      if (e.message.author.id === client.User.id) return\n\n      this.responds(e.message.content,\n        /^https:\\/\\/(www\\.youtube\\.com\\/watch\\?v=|youtu.be\\/)(\\S{11})$/i,\n        matches => {\n          if (Object.keys(this.streams).length > 0 &&\n          this.streams[e.message.guild.id] && !e.message.isPrivate) {\n            if (\n              this.streams[e.message.guild.id].text.id === e.message.channel.id\n            ) {\n              this.queueYT(matches[2], e.message)\n            }\n          }\n        }\n      )\n\n      if (!this.isBotMentioned(client.User, e.message, prefix)) {\n        return\n      }\n\n      let m = this.prettify(e.message.content, client.User.id, prefix)\n      this.responds(m, /^(summon|join)$/i, () => {\n        if (e.message.isPrivate) {\n          this.send(e.message.channel, 'This command cannot be run in PMs.')\n          return\n        }\n        if (Object.keys(this.streams).length > 0) {\n          for (let stream in this.streams) {\n            if (this.streams.hasOwnProperty(stream)) {\n              if (stream === e.message.guild.id) {\n                this.reply(e.message,\n                  `I\\'m already in a voice channel ` +\n                  `'**${this.streams[stream].voice.name}**'`\n                )\n                return\n              }\n            }\n          }\n        }\n        let voiceChannels = e.message.guild.voiceChannels\n        .filter(vc => {\n          return vc.members.map(m => m.id).indexOf(e.message.author.id) > -1\n        })\n        if (voiceChannels.length > 0) {\n          voiceChannels[0].join(false, false)\n          let check = (msg) => {\n            if (client.VoiceConnections.getForGuild(msg.guild)) {\n              msg.edit(\n                `:headphones:  Connected to '**${voiceChannels[0].name}**' ` +\n                `and bound to <#${e.message.channel.id}>.`\n              )\n              this.streams[e.message.guild.id] = new Stream({\n                text: e.message.channel,\n                voice: voiceChannels[0],\n                voiceConnection: client.VoiceConnections.getForGuild(msg.guild)\n              })\n            } else {\n              setTimeout(() => check(msg), 10)\n            }\n          }\n\n          this.send(e.message.channel, `:headphones:  Connecting to voice...`)\n          .then((msg, err) => {\n            check(msg)\n          })\n        }\n      })\n\n      this.responds(m, /^(leave|destroy)$/i, () => {\n        if (e.message.isPrivate) {\n          this.send(e.message.channel, 'This command cannot be run in PMs.')\n          return\n        }\n        if (Object.keys(this.streams).length > 0 &&\n        this.streams[e.message.guild.id]) {\n          let stream = this.streams[e.message.guild.id]\n          if (stream.text.id !== e.message.channel.id) {\n            return\n          }\n          this.send(\n            e.message.channel,\n            `:headphones:  Disconnected from '**${stream.voice.name}**' ` +\n            `and unbound from <#${stream.text.id}>`\n          )\n          stream.voice.leave()\n          delete this.streams[e.message.guild.id]\n        } else {\n          this.reply(e.message, 'I\\'m not in any voice channels.')\n        }\n      })\n\n      this.responds(m, /^(youtube|yt)$/i, () => {\n        this.wrongUsage(e.message, 'yt')\n      })\n\n      this.responds(m, /^(soundcloud|sc)$/i, () => {\n        this.wrongUsage(e.message, 'sc')\n      })\n\n      this.responds(m, /^(m|music) (next|skip|>>)$/i, () => {\n        if (Object.keys(this.streams).length === 0 ||\n        !this.streams[e.message.guild.id]) {\n          this.reply(e.message, 'Add me to a voice channel first.')\n          return\n        } else if (\n          this.streams[e.message.guild.id].text.id !== e.message.channel.id\n        ) {\n          return\n        }\n        let stream = this.streams[e.message.guild.id]\n        let vc = stream.voiceConnection\n        if (!vc) {\n          this.reply(e.message, 'No voice connection found.')\n          return\n        }\n        this.playNext(e.message.guild)\n      })\n\n      this.responds(m, /^(m|music) (\\|\\||stop)$/i, () => {\n        if (Object.keys(this.streams).length === 0 ||\n        !this.streams[e.message.guild.id]) {\n          this.reply(e.message, 'I\\'m not in any voice channel.')\n          return\n        } else if (\n          this.streams[e.message.guild.id].text.id !== e.message.channel.id\n        ) {\n          return\n        }\n        let stream = this.streams[e.message.guild.id].voiceConnection\n        if (!stream) {\n          this.reply(e.message, 'No voice connection found.')\n          return\n        }\n        let encoderStream = stream.voiceConnection.getEncoderStream()\n        encoderStream.unpipeAll()\n        this.send(e.message.channel, ':pause_button:  Stopped playing music.')\n      })\n\n      this.responds(m,\n        /^(youtube|yt) (add|queue|\\+) (https:\\/\\/www\\.youtube\\.com\\/watch\\?v=(\\S{11}))$/i,\n        matches => {\n          if (e.message.isPrivate) {\n            this.send(e.message.channel, 'This command cannot be run in PMs.')\n            return\n          }\n          if (Object.keys(this.streams).length === 0 ||\n          !this.streams[e.message.guild.id]) {\n            this.reply(e.message, 'Add me in a voice channel first!')\n            return\n          } else if (\n            this.streams[e.message.guild.id].text.id !== e.message.channel.id\n          ) {\n            return\n          }\n          this.queueYT(matches[4], e.message)\n        }\n      )\n\n      this.responds(m,\n        /^(youtube|yt) (q|find|search|query|\\?) (.+)$/i,\n        matches => {\n          if (e.message.isPrivate) {\n            this.send(e.message.channel, 'This command cannot be run in PMs.')\n            return\n          }\n          if (Object.keys(this.streams).length === 0 ||\n          !this.streams[e.message.guild.id]) {\n            this.reply(e.message, 'Add me in a voice channel first!')\n            return\n          } else if (\n            this.streams[e.message.guild.id].text.id !== e.message.channel.id\n          ) {\n            return\n          }\n          request\n          .get(\n            'https://www.googleapis.com/youtube/v3/search?part=snippet&q=' +\n            escape(matches[3]) +\n            `&key=${apiKeys['google_api']}`\n          )\n          .end((err, res) => {\n            if (err) {\n              this.reply(e.message, 'An error occurred during the YT search.')\n              this.logger.error('Error found during YT search', err)\n              return\n            }\n            let payload = res.body\n            if (payload['items'].length === 0) {\n              this.send(\n                e.message.channel, `Query ${matches[3]} gave no answer.`\n              )\n              return\n            }\n            let videos = payload.items.filter(\n              item => item.id.kind === 'youtube#video'\n            )\n            if (videos.length === 0) {\n              this.send(\n                e.message.channel, `Query ${matches[3]} gave no videos.`\n              )\n              return\n            }\n\n            let video = videos[0]\n            this.queueYT(video.id.videoId, e.message)\n          })\n        }\n      )\n\n      this.responds(m, /^(soundcloud|sc) (.+)$/i, matches => {\n        if (e.message.isPrivate) {\n          this.send(e.message.channel, 'This command cannot be run in PMs.')\n          return\n        }\n        if (Object.keys(this.streams).length === 0 ||\n        !this.streams[e.message.guild.id]) {\n          this.reply(e.message, 'Add me in a voice channel first!')\n          return\n        } else if (\n          this.streams[e.message.guild.id].text.id !== e.message.channel.id\n        ) {\n          return\n        }\n        this.queueSC(matches[2], e.message)\n      })\n\n      this.responds(m,\n        /^(playlist|pl)$/i, () => {\n          if (e.message.isPrivate) {\n            this.send(e.message.channel, 'This command cannot be run in PMs.')\n            return\n          }\n          let stream = this.streams[e.message.guild.id]\n          if (Object.keys(this.streams).length === 0 || !stream) {\n            this.reply(e.message, 'Add me in a voice channel first!')\n            return\n          } else if (stream.text.id !== e.message.channel.id) {\n            return\n          }\n          let songs = []\n          if (_.keys(stream.playlist).length === 0 && !stream.currentVideo) {\n            this.reply(e.message, 'I don\\'t have any songs currently queued.')\n            return\n          } else if (stream.currentVideo) {\n            this.send(e.message.channel,\n              `:sound:  Currently playing: ${stream.currentVideo.fullInfo}`\n            )\n          }\n          stream.playlist.forEach((elem, idx) => {\n            songs.push(`${idx + 1}. ${elem.prettyPrint}`)\n          })\n          this.send(e.message.channel,\n            songs.length > 0\n            ? `List of queued songs in playlist:\\n${songs.join('\\n')}`\n            : 'There are no remaining songs in the playlist. Go add some!'\n          )\n        }\n      )\n    })\n  }\n}\n\nmodule.exports = Disco\n"],"sourceRoot":"/Users/AaronTua/Desktop/code/fuyu/src"}