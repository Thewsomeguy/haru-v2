{"version":3,"sources":["util/Database.es6"],"names":[],"mappings":";;;;;;AAAA;;;;AACA;;;;AAEA;;;;;;;;IAEM,Q;AACJ,oBAAa,GAAb,EAAkB,OAAlB,EAA2B;AAAA;;AACzB,cAAU,WAAW,2BAAQ,eAAK,IAAL,CAAU,QAAQ,GAAR,EAAV,EAAyB,mBAAzB,CAAR,CAArB;AACA,SAAK,GAAL,GAAW,GAAX;AACA,SAAK,MAAL,GAAc,gBAAM,YAAN,CAAmB,QAAQ,MAAR,EAAnB,CAAd;AACD;;;;4BAEQ,E,EAAI,G,EAAK,G,EAAK;AACrB,UAAI,OAAO,EAAP,KAAc,UAAlB,EAA8B;AAC5B,YAAI,GAAJ,EAAS,OAAO,GAAG,GAAH,EAAQ,GAAR,CAAP;AACT,eAAO,GAAG,IAAH,EAAS,GAAT,CAAP;AACD;AACF;;;wBAEI,K,EAAO,K,EAAO,E,EAAI;AAAA;;AACrB,UAAI,QAAO,KAAP,yCAAO,KAAP,OAAiB,QAArB,EAA+B,QAAQ,KAAK,SAAL,CAAe,KAAf,CAAR;AAC/B,WAAK,MAAL,CAAY,IAAZ,CAAiB,KAAK,GAAtB,EAA2B,KAA3B,EAAkC,KAAlC,EAAyC,UAAC,GAAD,EAAM,GAAN,EAAc;AACrD,eAAO,MAAK,OAAL,CAAa,EAAb,EAAiB,GAAjB,EAAsB,GAAtB,CAAP;AACD,OAFD;AAGD;;;wBAEI,K,EAAO,E,EAAI;AAAA;;AACd,WAAK,MAAL,CAAY,IAAZ,CAAiB,KAAK,GAAtB,EAA2B,KAA3B,EAAkC,UAAC,GAAD,EAAM,GAAN,EAAc;AAC9C,eAAO,OAAK,OAAL,CAAa,EAAb,EAAiB,GAAjB,EAAsB,KAAK,KAAL,CAAW,GAAX,CAAtB,CAAP;AACD,OAFD;AAGD;;;wBAEI,K,EAAO,E,EAAI;AAAA;;AACd,WAAK,MAAL,CAAY,OAAZ,CAAoB,KAAK,GAAzB,EAA8B,KAA9B,EAAqC,UAAC,GAAD,EAAM,GAAN,EAAc;AACjD,eAAO,OAAK,OAAL,CAAa,EAAb,EAAiB,GAAjB,EAAsB,GAAtB,CAAP;AACD,OAFD;AAGD;;;wBAEI,K,EAAO,E,EAAI;AAAA;;AACd,WAAK,MAAL,CAAY,IAAZ,CAAiB,KAAK,GAAtB,EAA2B,KAA3B,EAAkC,UAAC,GAAD,EAAM,GAAN,EAAc;AAC9C,eAAO,OAAK,OAAL,CAAa,EAAb,EAAiB,GAAjB,EAAsB,GAAtB,CAAP;AACD,OAFD;AAGD;;;4BAEQ,E,EAAI;AAAA;;AACX,WAAK,MAAL,CAAY,KAAZ,CAAkB,KAAK,GAAvB,EAA4B,UAAC,GAAD,EAAM,GAAN,EAAc;AACxC,eAAO,OAAK,OAAL,CAAa,EAAb,EAAiB,GAAjB,EAAsB,GAAtB,CAAP;AACD,OAFD;AAGD;;;;;;AAGH,OAAO,OAAP,GAAiB,QAAjB","file":"util/Database.js","sourcesContent":["import redis from 'redis'\nimport path from 'path'\n\nimport FDB from './FlatDatabase'\n\nclass Database {\n  constructor (key, options) {\n    options = options || new FDB(path.join(process.cwd(), 'config/redis.json'))\n    this.key = key\n    this.client = redis.createClient(options.getAll())\n  }\n\n  _handle (cb, err, res) {\n    if (typeof cb === 'function') {\n      if (err) return cb(err, res)\n      return cb(null, res)\n    }\n  }\n\n  set (field, value, cb) {\n    if (typeof value === 'object') value = JSON.stringify(value)\n    this.client.hset(this.key, field, value, (err, res) => {\n      return this._handle(cb, err, res)\n    })\n  }\n\n  get (field, cb) {\n    this.client.hget(this.key, field, (err, res) => {\n      return this._handle(cb, err, JSON.parse(res))\n    })\n  }\n\n  has (field, cb) {\n    this.client.hexists(this.key, field, (err, res) => {\n      return this._handle(cb, err, res)\n    })\n  }\n\n  del (field, cb) {\n    this.client.hdel(this.key, field, (err, res) => {\n      return this._handle(cb, err, res)\n    })\n  }\n\n  getKeys (cb) {\n    this.client.hkeys(this.key, (err, res) => {\n      return this._handle(cb, err, res)\n    })\n  }\n}\n\nmodule.exports = Database\n"],"sourceRoot":"/Users/AaronTua/Desktop/code/fuyu/src"}