{"version":3,"sources":["util/Container.coffee"],"names":[],"mappings":"AAAA,IAAA;;AAAA,QAAA,GAAW,OAAA,CAAQ,UAAR;;AAEL;EACS,mBAAC,OAAD;IACX,IAAC,CAAA,EAAD,qBAAM,UAAU;MAAA,OAAA,EAAU;QAAE,MAAA,EAAQ,EAAV;OAAV;;EADL;;sBAGb,MAAA,GAAQ,SAAA;WACN,IAAC,CAAA;EADK;;sBAGR,GAAA,GAAK,SAAC,GAAD;WACH,OAAO,IAAC,CAAA,EAAG,CAAA,GAAA,CAAX,KAAmB;EADhB;;sBAGL,GAAA,GAAK,SAAC,GAAD;WACH,IAAC,CAAA,EAAG,CAAA,GAAA;EADD;;sBAGL,GAAA,GAAK,SAAC,GAAD,EAAM,GAAN,EAAW,EAAX;IACH,IAAC,CAAA,EAAG,CAAA,GAAA,CAAJ,GAAW;IACX,IAAC,CAAA,IAAD,CAAA;sCACA,GAAI,IAAC,CAAA;EAHF;;sBAKL,GAAA,GAAK,SAAC,GAAD,EAAM,EAAN;IACH,IAAG,IAAC,CAAA,GAAD,CAAK,GAAL,CAAH;MACE,OAAO,IAAC,CAAA,EAAG,CAAA,GAAA;MACX,IAAC,CAAA,IAAD,CAAA;wCACA,GAAI,IAAC,CAAA,aAHP;KAAA,MAAA;aAIK,MAJL;;EADG;;sBAOL,IAAA,GAAM,SAAC,EAAD;IACJ,IAAG,qBAAH;aACE,QAAQ,CAAC,SAAT,CAAmB,IAAC,CAAA,QAApB,EAA8B,IAAC,CAAA,EAA/B,EAAmC;QAAE,MAAA,EAAQ,CAAV;OAAnC,EAAkD,GAAA,CAAI,SAAA;QACpD,IAAG,0CAAH;4CAAa,GAAI,cAAjB;;MADoD,CAAJ,CAAlD,EADF;;EADI;;sBAKN,QAAA,GAAU,SAAC,GAAD;WACR,OAAO,IAAC,CAAA,EAAE,CAAC,MAAO,CAAA,GAAA,CAAlB,KAA0B;EADlB;;sBAGV,QAAA,GAAU,SAAC,GAAD;WACR,IAAC,CAAA,EAAE,CAAC,MAAO,CAAA,GAAA;EADH;;sBAGV,QAAA,GAAU,SAAC,GAAD,EAAM,GAAN,EAAW,EAAX;IACR,IAAC,CAAA,EAAE,CAAC,MAAO,CAAA,GAAA,CAAX,GAAkB;IAClB,IAAC,CAAA,IAAD,CAAA;sCACA,GAAI,IAAC,CAAA,EAAE,CAAC;EAHA;;sBAKV,QAAA,GAAU,SAAC,GAAD,EAAM,EAAN;IACR,IAAG,IAAC,CAAA,QAAD,CAAU,GAAV,CAAH;MACE,OAAO,IAAC,CAAA,EAAE,CAAC,MAAO,CAAA,GAAA;MAClB,IAAC,CAAA,IAAD,CAAA;wCACA,GAAI,IAAC,CAAA,aAHP;KAAA,MAAA;aAIK,MAJL;;EADQ;;;;;;AAOZ,MAAM,CAAC,OAAP,GAAiB","file":"util/Container.js","sourceRoot":"/Users/AaronTua/Desktop/code/fuyu/src","sourcesContent":["jsonfile = require 'jsonfile'\n\nclass Container\n  constructor: (options)->\n    @db = options ? options : { params: {} }\n\n  getAll: ->\n    @db\n\n  has: (key) ->\n    typeof @db[key] != 'undefined'\n\n  get: (key) ->\n    @db[key]\n\n  set: (key, val, cb) ->\n    @db[key] = val\n    @save()\n    cb? @db\n\n  del: (key, cb) ->\n    if @has key\n      delete @db[key]\n      @save()\n      cb? @db\n    else false\n\n  save: (cb) ->\n    if @filename?\n      jsonfile.writeFile @filename, @db, { spaces: 2 }, err ->\n        if err? then cb? err\n\n  hasParam: (key) ->\n    typeof @db.params[key] != 'undefined'\n\n  getParam: (key) ->\n    @db.params[key]\n\n  setParam: (key, val, cb) ->\n    @db.params[key] = val\n    @save()\n    cb? @db.params\n\n  delParam: (key, cb) ->\n    if @hasParam key\n      delete @db.params[key]\n      @save()\n      cb? @db\n    else false\n\nmodule.exports = Container\n"]}