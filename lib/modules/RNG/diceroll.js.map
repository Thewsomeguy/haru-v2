{"version":3,"sources":["modules/RNG/diceroll.js"],"names":[],"mappings":";;;;AAAA;;;;AAEA;;;;;;;;;;;;IAEM,I;;;;;;;;;;;2BA+BoB;AAAA,UAAlB,GAAkB,yDAAZ,CAAY;AAAA,UAAT,GAAS,yDAAH,CAAG;;AACtB,YAAM,SAAS,GAAT,EAAc,EAAd,CAAN;AACA,YAAM,SAAS,GAAT,EAAc,EAAd,CAAN;AACA,UAAI,SAAS,EAAb;AACA,WAAK,IAAI,IAAI,CAAb,EAAgB,IAAI,GAApB,EAAyB,GAAzB,EAA8B;AAC5B,eAAO,IAAP,CAAY,KAAK,KAAL,CAAW,KAAK,MAAL,KAAgB,GAAhB,GAAsB,CAAjC,CAAZ;AACD;AACD,aAAO,MAAP;AACD;;;6BAES;AAAA;;AACR,WAAK,QAAL,CAAc,6BAAd,EAA6C,YAAM;AACjD,eAAK,IAAL,CAAU,OAAK,OAAf,EACK,OAAK,MAAL,CAAY,IADjB,oBACoC,OAAK,IAAL,GAAY,CAAZ,CADpC;AAED,OAHD;;AAKA,WAAK,QAAL,CAAc,mCAAd,EAAmD,mBAAW;AAC5D,YAAI,SAAS,OAAK,IAAL,CAAU,QAAQ,CAAR,CAAV,CAAb;AACA,eAAK,IAAL,CAAU,OAAK,OAAf,EAAwB,CACtB,OADsB,EAEtB,OAAO,IAAP,CAAY,GAAZ,CAFsB,EAGtB,KAHsB,gBAIV,iBAAE,GAAF,CAAM,MAAN,CAJU,QAAxB;AAMD,OARD;;AAUA,WAAK,QAAL,CAAc,oCAAd,EAAoD,mBAAW;AAC7D,YAAI,SAAS,OAAK,IAAL,CAAU,CAAV,EAAa,QAAQ,CAAR,CAAb,CAAb;AACA,eAAK,IAAL,CAAU,OAAK,OAAf,EAAwB,CACtB,OADsB,EAEtB,OAAO,IAAP,CAAY,GAAZ,CAFsB,EAGtB,KAHsB,gBAIV,iBAAE,GAAF,CAAM,MAAN,CAJU,QAAxB;AAMD,OARD;;AAUA,WAAK,QAAL,CAAc,yCAAd,EAAyD,mBAAW;AAClE,YAAI,SAAS,OAAK,IAAL,CAAU,QAAQ,CAAR,CAAV,EAAsB,QAAQ,CAAR,CAAtB,CAAb;AACA,eAAK,IAAL,CAAU,OAAK,OAAf,EAAwB,CACtB,OADsB,EAEtB,OAAO,IAAP,CAAY,GAAZ,CAFsB,EAGtB,KAHsB,gBAIV,iBAAE,GAAF,CAAM,MAAN,CAJU,QAAxB;AAMD,OARD;;AAUA,WAAK,QAAL,CAAc,qDAAd,EAAqE,mBAAW;AAC9E,YAAI,SAAS,OAAK,IAAL,CAAU,QAAQ,CAAR,CAAV,EAAsB,QAAQ,CAAR,CAAtB,EAAkC,QAAQ,CAAR,IAAa,QAAQ,CAAR,CAA/C,CAAb;AACA,eAAK,IAAL,CAAU,OAAK,OAAf,EAAwB,CACtB,OADsB,EAEtB,OAAO,IAAP,CAAY,GAAZ,CAFsB,EAGtB,KAHsB,EAItB,YAAU,iBAAE,GAAF,CAAM,MAAN,CAAV,SAA2B,QAAQ,CAAR,CAA3B,SAAyC,QAAQ,CAAR,CAAzC,oBACK,iBAAE,GAAF,CAAM,MAAN,IAAgB,SAAS,QAAQ,CAAR,IAAa,QAAQ,CAAR,CAAtB,EAAkC,EAAlC,CADrB,SAJsB,CAAxB;AAOD,OATD;AAUD;;;wBAtFkB;AACjB,aAAO,UAAP;AACD;;;wBAEyB;AACxB,aAAO,YAAP;AACD;;;wBAEmB;AAClB,aAAO,CACL,iEADK,EAEL,qEAFK,EAGL,KAHK,EAIL,CACE,kCADF,EAEE,gDAFF,EAGE,0EAHF,EAIE,iFAJF,CAJK,EAUL,qBAVK,CAAP;AAYD;;;wBAEqB;AACpB,aAAO,CACL,UADK,EAEL,MAFK,CAAP;AAID;;;;;;AA6DH,OAAO,OAAP,GAAiB,IAAjB","file":"modules/RNG/diceroll.js","sourcesContent":["import _ from 'lodash'\n\nimport BaseCommand from '../../base/BaseCommand'\n\nclass Dice extends BaseCommand {\n  static get name () {\n    return 'diceroll'\n  }\n\n  static get description () {\n    return 'Rolls dice'\n  }\n\n  static get usage () {\n    return [\n      'The **diceroll** command rolls some dice and returns the result',\n      'The number of dice and their faces are based on dice notation (AdX)',\n      '```',\n      [\n        'dice - Rolls 1 die with 6 faces`',\n        'dice AdX - Rolls A number of dice with X faces',\n        'dice AdX+B - Rolls A number of dice with X faces, adding B to the result',\n        'dice AdX-B - Rolls A number of dice with X faces, subtracting B from the result'\n      ],\n      'e.g. `dice 6d20-10`'\n    ]\n  }\n\n  static get aliases () {\n    return [\n      'rolldice',\n      'dice'\n    ]\n  }\n\n  roll (num = 1, fac = 6) {\n    num = parseInt(num, 10)\n    fac = parseInt(fac, 10)\n    let result = []\n    for (let i = 0; i < num; i++) {\n      result.push(Math.floor(Math.random() * fac + 1))\n    }\n    return result\n  }\n\n  handle () {\n    this.responds(/^(rolldice|diceroll|dice)$/i, () => {\n      this.send(this.channel,\n        `${this.sender.name} rolled a **${this.roll()[0]}**!`)\n    })\n\n    this.responds(/^(rolldice|diceroll|dice) (\\d+)$/i, matches => {\n      let result = this.roll(matches[1])\n      this.send(this.channel, [\n        '```xl',\n        result.join(' '),\n        '```',\n        `Total: **${_.sum(result)}**`\n      ])\n    })\n\n    this.responds(/^(rolldice|diceroll|dice) d(\\d+)$/i, matches => {\n      let result = this.roll(1, matches[2])\n      this.send(this.channel, [\n        '```xl',\n        result.join(' '),\n        '```',\n        `Total: **${_.sum(result)}**`\n      ])\n    })\n\n    this.responds(/^(rolldice|diceroll|dice) (\\d+)d(\\d+)$/i, matches => {\n      let result = this.roll(matches[2], matches[3])\n      this.send(this.channel, [\n        '```xl',\n        result.join(' '),\n        '```',\n        `Total: **${_.sum(result)}**`\n      ])\n    })\n\n    this.responds(/^(rolldice|diceroll|dice) (\\d+)d(\\d+)(\\+|\\-)(\\d+)$/i, matches => {\n      let result = this.roll(matches[2], matches[3], matches[4] + matches[5])\n      this.send(this.channel, [\n        '```xl',\n        result.join(' '),\n        '```',\n        `Total: ${_.sum(result)} ${matches[4]} ${matches[5]} = ` +\n        `**${_.sum(result) + parseInt(matches[4] + matches[5], 10)}**`\n      ])\n    })\n  }\n}\n\nmodule.exports = Dice\n"],"sourceRoot":"/Users/AaronTua/Desktop/code/fuyu/src"}