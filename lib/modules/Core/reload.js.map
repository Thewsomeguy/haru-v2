{"version":3,"sources":["modules/Core/reload.js"],"names":[],"mappings":";;;;AAAA;;;;AACA;;;;AAEA;;;;;;;;;;;;IAEM,M;;;;;;;;;;;iCAyBU;AACZ,UAAI,UAAU,0BAAG,eAAK,IAAL,CAAU,QAAQ,GAAR,EAAV,EAAyB,aAAzB,CAAH,CAAd;AACA,aAAO,OAAP;AACD;;;6BAES;AAAA;;AACR,WAAK,QAAL,CAAc,WAAd,EAA2B,YAAM;AAC/B,YAAI,YAAY,OAAO,IAAP,CAAY,OAAK,UAAL,EAAZ,EAA+B,MAA/C;AACA,eAAK,SAAL,CAAe,GAAf,CAAmB,SAAnB,EAA8B,aAA9B;AACA,eAAK,MAAL,CAAY,IAAZ,CAAoB,OAAK,MAAL,CAAY,IAAhC;AACA,eAAK,IAAL,CAAU,OAAK,OAAf,sBAA0C,SAA1C;AACD,OALD;AAMD;;;wBApBgB;AACf,aAAO,IAAP;AACD;;;wBAEa;AACZ,aAAO,IAAP;AACD;;;wBAtBkB;AACjB,aAAO,QAAP;AACD;;;wBAEyB;AACxB,aAAO,qBAAP;AACD;;;wBAEmB;AAClB,aAAO,CACL,KADK,EAEL,CAAC,8BAAD,CAFK,EAGL,KAHK,CAAP;AAKD;;;;;;AAyBH,OAAO,OAAP,GAAiB,MAAjB","file":"modules/Core/reload.js","sourcesContent":["import rq from 'require-all'\nimport path from 'path'\n\nimport BaseCommand from '../../base/BaseCommand'\n\nclass Reload extends BaseCommand {\n  static get name () {\n    return 'reload'\n  }\n\n  static get description () {\n    return 'Reloads all modules'\n  }\n\n  static get usage () {\n    return [\n      '```',\n      ['reload - Reloads all modules'],\n      '```'\n    ]\n  }\n\n  get adminOnly () {\n    return true\n  }\n\n  get hidden () {\n    return true\n  }\n\n  getModules () {\n    let modules = rq(path.join(process.cwd(), 'lib/modules'))\n    return modules\n  }\n\n  handle () {\n    this.responds(/^reload$/i, () => {\n      let moduleNum = Object.keys(this.getModules()).length\n      this.container.get('handler').reloadModules()\n      this.logger.info(`${this.sender.name} has reloaded all modules.`)\n      this.send(this.channel, `Reloaded all **${moduleNum}** modules.`)\n    })\n  }\n}\n\nmodule.exports = Reload\n"],"sourceRoot":"/Users/AaronTua/Desktop/code/fuyu/src"}