{"version":3,"sources":["modules/Core/request.js"],"names":[],"mappings":";;;;AAAA;;;;;;;;;;;;IAEM,S;;;;;;;;;;;6BAiBM;AAAA;;AACR,WAAK,QAAL,CAAc,iBAAd,EAAiC,mBAAW;AAC1C,eAAK,MAAL,CAAY,MAAZ,CAAmB,OAAnB,CAA2B,cAAM;AAC/B,cAAI,QAAQ,OAAK,MAAL,CAAY,KAAZ,CAAkB,GAAlB,CAAsB,IAAtB,EAA4B,EAA5B,CAAZ;AACA,cAAI,KAAJ,EAAW;AACT,mBAAK,IAAL,CAAU,KAAV,EAAiB,QACV,OAAK,MAAL,CAAY,IADF,oCAEf,QAAQ,CAAR,CAFe,EAGf,IAHe,CAGV,IAHU,CAAjB;AAID;AACF,SARD;AASA,eAAK,KAAL,CAAW,+BACX,uDADA;AAED,OAZD;AAaD;;;wBA9BkB;AACjB,aAAO,SAAP;AACD;;;wBAEyB;AACxB,aAAO,4BAAP;AACD;;;wBAEmB;AAClB,aAAO,CACL,KADK,EAEL,CAAC,qDAAD,CAFK,EAGL,KAHK,CAAP;AAKD;;;;;;AAmBH,OAAO,OAAP,GAAiB,SAAjB","file":"modules/Core/request.js","sourcesContent":["import BaseCommand from '../../base/BaseCommand'\n\nclass RQFeature extends BaseCommand {\n  static get name () {\n    return 'request'\n  }\n\n  static get description () {\n    return 'Requests for a new feature'\n  }\n\n  static get usage () {\n    return [\n      '```',\n      ['request <description> - Requests for a new function'],\n      '```'\n    ]\n  }\n\n  handle () {\n    this.responds(/^request (.+)$/i, matches => {\n      this.client.admins.forEach(id => {\n        let admin = this.client.users.get('id', id)\n        if (admin) {\n          this.send(admin, [\n            `**${this.sender.name}** requested a new feature:\\n`,\n            matches[1]\n          ].join('\\n'))\n        }\n      })\n      this.reply('Thank you for your input! ' +\n      'The admins will be looking into your request shortly.')\n    })\n  }\n}\n\nmodule.exports = RQFeature\n"],"sourceRoot":"/Users/AaronTua/Desktop/code/fuyu/src"}