{"version":3,"sources":["modules/Images/hate.js"],"names":[],"mappings":";;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AAEA;;;;;;;;;;;;IAEM,I;;;;;;;;;;;gCAeS,K,EAAO;AAAA;;AAClB,UAAI,OAAO,CACT,QADS,EAET,MAFS,EAGT,MAAM,KAAN,CAAY,SAAZ,EAAuB,IAAvB,CAA4B,KAA5B,CAHS,EAIT,QAJS,EAKT,IALS,CAKJ,IALI,CAAX;;AAOA,wBAAG,eAAK,IAAL,CAAU,QAAQ,GAAR,EAAV,EAAyB,oBAAzB,CAAH,EACC,IADD,CACM,eAAK,IAAL,CAAU,QAAQ,GAAR,EAAV,EAAyB,uBAAzB,CADN,EACyD,IADzD,EAEC,OAFD,CAES,QAFT,EAGC,QAHD,CAGU,CAAC,EAHX,EAGe,EAHf,EAGmB,IAHnB,EAIC,KAJD,CAIO,eAAK,IAAL,CAAU,QAAQ,GAAR,EAAV,iBAAsC,KAAK,OAAL,CAAa,EAAnD,UAJP,EAIqE,eAAO;AAC1E,YAAI,GAAJ,EAAS;AACP,iBAAK,MAAL,CAAY,KAAZ,CACE,gFACa,IADb,CADF,EAEuB,GAFvB;AAIA,iBAAK,KAAL,6CAC4C,IAD5C,UACqD,GADrD;AAGA;AACD;AACD,eAAK,MAAL,CACE,eAAK,IAAL,CAAU,QAAQ,GAAR,EAAV,iBAAsC,OAAK,OAAL,CAAa,EAAnD,UADF,EACgE,UADhE,EAGC,IAHD,CAGM,YAAM;AACV,uBAAG,MAAH,CAAU,eAAK,IAAL,CAAU,QAAQ,GAAR,EAAV,iBAAsC,OAAK,OAAL,CAAa,EAAnD,UAAV;AACD,SALD,EAMC,KAND,CAMO,eAAO;AACZ,iBAAK,MAAL,CAAY,KAAZ,CACE,kFACa,IADb,CADF,EAEuB,GAFvB;AAIA,iBAAK,KAAL,8CAC6C,IAD7C,UACsD,GADtD;AAGA;AACD,SAfD;AAgBD,OA/BD;AAgCD;;;6BAES;AAAA;;AACR,WAAK,QAAL,CAAc,SAAd,EAAyB,YAAM;AAC7B,eAAK,WAAL,CAAiB,OAAK,MAAL,CAAY,IAA7B;AACD,OAFD;;AAIA,WAAK,QAAL,CAAc,cAAd,EAA8B,mBAAW;AACvC,YAAI,UAAU,iBAAE,IAAF,CAAO,QAAQ,CAAR,EAAW,OAAX,CAAmB,YAAnB,EAAiC,UAAC,KAAD,EAAQ,EAAR,EAAe;AACnE,cAAI,OAAO,OAAK,MAAL,CAAY,KAAZ,CAAkB,GAAlB,CAAsB,IAAtB,EAA4B,EAA5B,CAAX;AACA,cAAI,IAAJ,EAAU;AACR,mBAAO,KAAK,IAAZ;AACD;AACD,iBAAO,KAAP;AACD,SANoB,CAAP,CAAd;AAOA,eAAK,WAAL,CAAiB,OAAjB;AACD,OATD;AAUD;;;wBAvEkB;AACjB,aAAO,MAAP;AACD;;;wBAEyB;AACxB,aAAO,eAAP;AACD;;;wBAEmB;AAClB,aAAO,CACL,CAAC,yCAAD,CADK,CAAP;AAGD;;;;;;AA8DH,OAAO,OAAP,GAAiB,IAAjB","file":"modules/Images/hate.js","sourcesContent":["import path from 'path'\nimport _ from 'lodash'\nimport gm from 'gm'\nimport fs from 'fs'\n\nimport BaseCommand from '../../base/BaseCommand'\n\nclass Hate extends BaseCommand {\n  static get name () {\n    return 'hate'\n  }\n\n  static get description () {\n    return 'I-I hate you!'\n  }\n\n  static get usage () {\n    return [\n      ['**hate** [text] - I-I hate you, <text>!']\n    ]\n  }\n\n  createImage (input) {\n    let text = [\n      'I hate',\n      'you,',\n      input.match(/.{1,8}/g).join('-\\n'),\n      '-chan!'\n    ].join('\\n')\n\n    gm(path.join(process.cwd(), 'db/images/hate.png'))\n    .font(path.join(process.cwd(), 'db/fonts/animeace.ttf'), 13.5)\n    .gravity('Center')\n    .drawText(-67, 32, text)\n    .write(path.join(process.cwd(), `db/images/${this.message.id}.png`), err => {\n      if (err) {\n        this.logger.error(\n          `Error occurred while writing file from GM command 'hate' ` +\n          `with text ${text}`, err\n        )\n        this.reply(\n          `Error: Unable to write image with text ${text}\\n${err}`\n        )\n        return\n      }\n      this.upload(\n        path.join(process.cwd(), `db/images/${this.message.id}.png`), 'hate.png'\n      )\n      .then(() => {\n        fs.unlink(path.join(process.cwd(), `db/images/${this.message.id}.png`))\n      })\n      .catch(err => {\n        this.logger.error(\n          `Error occurred while uploading file from GM command 'hate' ` +\n          `with text ${text}`, err\n        )\n        this.reply(\n          `Error: Unable to upload image with text ${text}\\n${err}`\n        )\n        return\n      })\n    })\n  }\n\n  handle () {\n    this.responds(/^hate$/i, () => {\n      this.createImage(this.sender.name)\n    })\n\n    this.responds(/^hate (.+)$/i, matches => {\n      let content = _.trim(matches[1].replace(/<@(\\d+)>/gi, (match, p1) => {\n        let user = this.client.users.get('id', p1)\n        if (user) {\n          return user.name\n        }\n        return match\n      }))\n      this.createImage(content)\n    })\n  }\n}\n\nmodule.exports = Hate\n"],"sourceRoot":"/Users/AaronTua/Desktop/code/fuyu/src"}