{"version":3,"sources":["modules/Images/doge.js"],"names":[],"mappings":"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","file":"modules/Images/doge.js","sourcesContent":["import gm from 'gm'\nimport fs from 'fs'\nimport path from 'path'\n\nimport BaseCommand from '../../base/BaseCommand'\n\nconst sample = [\n  'discord',\n  'doge',\n  'haru',\n  'gay',\n  'fag',\n  'command',\n  'pictures'\n]\n\nclass DogeGM extends BaseCommand {\n  static get name () {\n    return 'doge'\n  }\n\n  static get description () {\n    return 'such doge, much wow'\n  }\n\n  static get usage () {\n    return [\n      ['**doge** - wow']\n    ]\n  }\n\n  randX () {\n    let x = Math.floor(Math.random() * 1200)\n    if (x > 1000) {\n      x -= 200\n    }\n    return x\n  }\n\n  randY () {\n    return Math.floor(Math.random() * 600) + 250\n  }\n\n  modifyArr (input) {\n    if (input.length > 4) {\n      let i = input.length\n      while (i > 4) {\n        input.splice(Math.floor(Math.random() * input.length), 1)\n        i--\n      }\n    } else if (input.length < 4) {\n      let i = input.length\n      while (i < 4) {\n        input.push(sample[Math.floor(Math.random() * sample.length)])\n        i++\n      }\n    }\n    return input\n  }\n\n  error (err, text) {\n    text = text || ''\n    this.logger.error(\n      `Error occurred while uploading file from GM command 'hate' ` +\n      `with text ${text}`,\n      err\n    )\n    return this.reply(\n      `Error: Unable to upload image with text ${text}`\n    )\n  }\n\n  createImage (res) {\n    gm(path.join(process.cwd(), 'db/images/doge.jpg'))\n    .font(path.join(process.cwd(), 'db/fonts/comicsans.ttf'), 100)\n    .fill('#ff0000')\n    .drawText(this.randX(), this.randY(), `such ${res[0]}`)\n    .fill('#00ff00')\n    .drawText(this.randX(), this.randY(), `much ${res[1]}`)\n    .fill('#0000ff')\n    .drawText(this.randX(), this.randY(), `many ${res[2]}`)\n    .fill('#ee00ee')\n    .drawText(this.randX(), this.randY(), `very ${res[3]}`)\n    .write(path.join(process.cwd(), `db/images/${this.message.id}.png`), err => {\n      if (err) {\n        this.error(err, res.join(', '))\n      }\n      this.upload(\n        path.join(process.cwd(), `db/images/${this.message.id}.png`), 'doge.png'\n      )\n      .then(() => {\n        fs.unlink(path.join(process.cwd(), `db/images/${this.message.id}.png`))\n      })\n      .catch(err => {\n        this.error(err, res.join(', '))\n      })\n    })\n  }\n\n  handle () {\n    this.responds(/^doge$/i, () => {\n      let input = []\n      this.client.getChannelLogs(this.channel, 10).then((msgs) => {\n        let res = []\n        for (let msg in msgs) {\n          if (typeof msgs[msg].content === 'string') {\n            res = res.concat(msgs[msg].content.match(/\\w+/g))\n          }\n        }\n        input = res.filter((elem, idx, arr) => {\n          return elem !== undefined && arr.indexOf(elem) === idx\n        })\n        return this.createImage(this.modifyArr(input))\n      }).catch(this.error)\n    })\n  }\n}\n\nmodule.exports = DogeGM\n"],"sourceRoot":"/Users/AaronTua/Desktop/code/fuyu/src"}