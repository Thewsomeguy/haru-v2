{"version":3,"sources":["modules/.Cache/Bank.js"],"names":[],"mappings":";;;;;;AAAA;;;;AACA;;;;;;;;;;;;AAEA,IAAI,SAAS,uBAAa,gBAAb,CAAb;;IAEM,I;;;AACJ,kBAAe;AAAA;;AAAA,mFACP,SADO;AAEd;;;;6BAES,I,EAAM,E,EAAI;AAClB,UAAI,QAAO,IAAP,yCAAO,IAAP,OAAgB,QAApB,EAA8B,OAAO,KAAK,EAAZ;AAC9B,cAAQ,GAAR,CAAY,2BAA2B,IAAvC;AACA,WAAK,GAAL,CAAS,IAAT,EAAe,GAAf,EAAoB,UAAC,GAAD,EAAM,GAAN,EAAc;AAChC,YAAI,GAAJ,EAAS;AACP,aAAG,GAAH,EAAQ,GAAR;AACD,SAFD,MAEO;AACL,aAAG,GAAH,EAAQ,GAAR;AACD;AACF,OAND;AAOD;;;4BAEQ,I,EAAM,E,EAAI;AAAA;;AACjB,UAAI,QAAO,IAAP,yCAAO,IAAP,OAAgB,QAApB,EAA8B,OAAO,KAAK,EAAZ;AAC9B,WAAK,GAAL,CAAS,IAAT,EAAe,UAAC,GAAD,EAAM,GAAN,EAAc;AAC3B,YAAI,CAAC,GAAL,EAAU;AACR,cAAI,GAAJ,EAAS;AACP,eAAG,IAAH,EAAS,GAAT;AACD,WAFD,MAEO,IAAI,QAAQ,IAAZ,EAAkB;AACvB,mBAAK,QAAL,CAAc,IAAd,EAAoB,EAApB;AACD;AACF;AACF,OARD;AASD;;;+BAEW,I,EAAM,G,EAAK,E,EAAI;AACzB,UAAI,QAAO,IAAP,yCAAO,IAAP,OAAgB,QAApB,EAA8B,OAAO,KAAK,EAAZ;AAC9B,WAAK,GAAL,CAAS,IAAT,EAAe,SAAS,GAAT,EAAc,EAAd,CAAf,EAAkC,EAAlC;AACD;;;+BAEW,I,EAAM,G,EAAK,E,EAAI;AACzB,UAAI,QAAO,IAAP,yCAAO,IAAP,OAAgB,QAApB,EAA8B,OAAO,KAAK,EAAZ;AAC9B,WAAK,IAAL,CAAU,IAAV,EAAgB,SAAS,GAAT,EAAc,EAAd,CAAhB,EAAmC,EAAnC;AACD;;;+BAEW,I,EAAM,G,EAAK,E,EAAI;AACzB,WAAK,UAAL,CAAgB,IAAhB,EAAsB,CAAC,SAAS,GAAT,EAAc,EAAd,CAAvB,EAA0C,EAA1C;AACD;;;6BAES,G,EAAK,E,EAAI;AACjB,WAAK,MAAL,CAAY,SAAZ,CAAsB,KAAK,GAA3B,EAAgC,CAAhC,EAAmC,SAAS,GAAT,EAAc,EAAd,IAAoB,CAAvD,EAA0D,YAA1D,EAAwE,UAAC,GAAD,EAAM,GAAN,EAAc;AACpF,YAAI,OAAO,EAAP,KAAc,UAAlB,EAA8B;AAC5B,cAAI,GAAJ,EAAS,OAAO,GAAG,GAAH,EAAQ,GAAR,CAAP;AACT,iBAAO,GAAG,IAAH,EAAS,GAAT,CAAP;AACD;AACF,OALD;AAMD;;;;;;AAGH,IAAI,KAAK,IAAI,IAAJ,EAAT;AACA,OAAO,OAAP,GAAiB;AACf,UAAQ,EADO;AAEf,UAAQ;AAFO,CAAjB","file":"modules/.Cache/Bank.js","sourcesContent":["import SDB from '../../util/SortedDatabase'\nimport Database from '../../util/Database'\n\nlet Claims = new Database('credits-claims')\n\nclass Bank extends SDB {\n  constructor () {\n    super('credits')\n  }\n\n  initUser (user, cb) {\n    if (typeof user === 'object') user = user.id\n    console.log('Creating new account: ' + user)\n    this.set(user, 100, (err, res) => {\n      if (err) {\n        cb(err, res)\n      } else {\n        cb(err, 100)\n      }\n    })\n  }\n\n  getUser (user, cb) {\n    if (typeof user === 'object') user = user.id\n    this.get(user, (err, res) => {\n      if (!err) {\n        if (res) {\n          cb(null, res)\n        } else if (res === null) {\n          this.initUser(user, cb)\n        }\n      }\n    })\n  }\n\n  setCredits (user, amt, cb) {\n    if (typeof user === 'object') user = user.id\n    this.set(user, parseInt(amt, 10), cb)\n  }\n\n  addCredits (user, amt, cb) {\n    if (typeof user === 'object') user = user.id\n    this.incr(user, parseInt(amt, 10), cb)\n  }\n\n  delCredits (user, amt, cb) {\n    this.addCredits(user, -parseInt(amt, 10), cb)\n  }\n\n  sortRank (top, cb) {\n    this.client.zrevrange(this.key, 0, parseInt(top, 10) - 1, 'withscores', (err, res) => {\n      if (typeof cb === 'function') {\n        if (err) return cb(err, res)\n        return cb(null, res)\n      }\n    })\n  }\n}\n\nlet CM = new Bank()\nmodule.exports = {\n  Banker: CM,\n  Claims: Claims\n}\n"],"sourceRoot":"/Users/AaronTua/Desktop/code/fuyu/src"}