{"version":3,"sources":["modules/Info/stats.js"],"names":[],"mappings":";;;;AAAA;;;;AACA;;;;;;;;;;;;AAEA,IAAI,QAAQ,uBAAa,OAAb,CAAZ;;IAEM,U;;;;;;;;;;;iCAeU,K,EAAO,E,EAAI;AAAA;;AACvB,YAAM,GAAN,CAAU,KAAV,EAAiB,UAAC,GAAD,EAAM,GAAN,EAAc;AAC7B,YAAI,GAAJ,EAAS;AACP,iBAAK,MAAL,CAAY,KAAZ,CACK,OAAK,MAAL,CAAY,IADjB,2CAC6D,GAD7D;AAGA,iBAAK,KAAL,kCAA0C,GAA1C;AACA;AACD;AACD,eAAO,GAAG,GAAH,CAAP;AACD,OATD;AAUD;;;6BAES,K,EAAO,E,EAAI;AAAA;;AACnB,YAAM,GAAN,CAAU,KAAV,EAAiB,UAAC,GAAD,EAAM,IAAN,EAAe;AAC9B,YAAI,GAAJ,EAAS;AACP,iBAAK,MAAL,CAAY,KAAZ,CACK,OAAK,MAAL,CAAY,IADjB,2CAC6D,GAD7D;AAGA,iBAAK,KAAL,4BAAoC,GAApC;AACA;AACD;AACD,eAAO,GAAG,IAAH,CAAP;AACD,OATD;AAUD;;;6BAES,K,EAAO,K,EAAO,E,EAAI;AAAA;;AAC1B,YAAM,GAAN,CAAU,KAAV,EAAiB,KAAjB,EAAwB,eAAO;AAC7B,YAAI,GAAJ,EAAS;AACP,iBAAK,MAAL,CAAY,KAAZ,CACK,OAAK,MAAL,CAAY,IADjB,4CAC8D,GAD9D;AAGA,iBAAK,KAAL,0BAAkC,GAAlC;AACA;AACD;AACD,eAAO,GAAG,IAAH,CAAP;AACD,OATD;AAUD;;;6BAES;AAAA;;AACR,WAAK,QAAL,CAAc,UAAd,EAA0B,YAAM;AAC9B,YAAI,SAAS,OAAK,MAAL,CAAY,MAAzB;AACA,eAAK,IAAL,CAAU,OAAK,OAAf,EAAwB,CACtB,OADsB,EAEtB,kBAFsB,EAGtB,aAAW,KAAK,KAAL,CAAW,UAAU,OAAO,EAAP,GAAY,EAAtB,CAAX,CAAX,iBACG,KAAK,KAAL,CAAW,UAAU,OAAO,EAAjB,CAAX,IAAmC,EADtC,oBAEG,KAAK,KAAL,CAAW,SAAS,IAApB,IAA4B,EAF/B,cAHsB,EAMtB,aAAW,OAAK,MAAL,CAAY,OAAZ,CAAoB,MAA/B,mBACG,OAAK,MAAL,CAAY,QAAZ,CAAqB,MADxB,qBAEG,OAAK,MAAL,CAAY,KAAZ,CAAkB,MAFrB,aANsB,EAStB,KATsB,EAUtB,IAVsB,CAUjB,IAViB,CAAxB;AAWD,OAbD;AAcD;;;wBApEkB;AACjB,aAAO,OAAP;AACD;;;wBAEyB;AACxB,aAAO,uBAAP;AACD;;;wBAEmB;AAClB,aAAO,CACL,CAAC,mCAAD,CADK,CAAP;AAGD;;;;;;AA2DH,OAAO,OAAP,GAAiB,UAAjB","file":"modules/Info/stats.js","sourcesContent":["import BaseCommand from '../../base/BaseCommand'\nimport Database from '../../util/Database'\n\nlet Stats = new Database('stats')\n\nclass Statistics extends BaseCommand {\n  static get name () {\n    return 'stats'\n  }\n\n  static get description () {\n    return 'Shows some statistics'\n  }\n\n  static get usage () {\n    return [\n      ['**stats** - Shows some statistics']\n    ]\n  }\n\n  checkEntries (entry, cb) {\n    Stats.has(entry, (err, res) => {\n      if (err) {\n        this.logger.error(\n          `${this.sender.name} encountered an error querying entry`, err\n        )\n        this.reply(`Error querying for entries: ${err}`)\n        return\n      }\n      return cb(res)\n    })\n  }\n\n  getEntry (entry, cb) {\n    Stats.get(entry, (err, tags) => {\n      if (err) {\n        this.logger.error(\n          `${this.sender.name} encountered an error fetching entry`, err\n        )\n        this.reply(`Error fetching entry: ${err}`)\n        return\n      }\n      return cb(tags)\n    })\n  }\n\n  setEntry (entry, value, cb) {\n    Stats.set(entry, value, err => {\n      if (err) {\n        this.logger.error(\n          `${this.sender.name} encountered an error saving an entry`, err\n        )\n        this.reply(`Error saving entry: ${err}`)\n        return\n      }\n      return cb(true)\n    })\n  }\n\n  handle () {\n    this.responds(/^stats$/i, () => {\n      let uptime = this.client.uptime\n      this.send(this.channel, [\n        '```xl',\n        '== Statistics ==',\n        `Uptime: ${Math.round(uptime / (1000 * 60 * 60))} hours, ` +\n        `${Math.round(uptime / (1000 * 60)) % 60} minutes, ` +\n        `${Math.round(uptime / 1000) % 60} seconds`,\n        `Cached: ${this.client.servers.length} servers, ` +\n        `${this.client.channels.length} channels, ` +\n        `${this.client.users.length} users.`,\n        '```'\n      ].join('\\n'))\n    })\n  }\n}\n\nmodule.exports = Statistics\n"],"sourceRoot":"/Users/AaronTua/Desktop/code/fuyu/src"}