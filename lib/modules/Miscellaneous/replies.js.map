{"version":3,"sources":["modules/Miscellaneous/replies.js"],"names":[],"mappings":"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","file":"modules/Miscellaneous/replies.js","sourcesContent":["import escape from 'escape-string-regexp'\nimport path from 'path'\nimport _ from 'lodash'\n\nimport BaseCommand from '../../base/BaseCommand'\nimport FDB from '../../util/FlatDatabase'\nimport DL from '../../util/Datalist'\n\nlet replies = new FDB(path.join(process.cwd(), 'db/replies/replies.json')).getAll()\nlet rc = new DL(path.join(process.cwd(), 'db/replies/reply_channels.json'))\n\nclass Replies extends BaseCommand {\n  static get name () {\n    return 'replies'\n  }\n\n  static get description () {\n    return 'Replies to certain keywords'\n  }\n\n  static get usage () {\n    return [\n      [\n        '**replies** - Toggles replies',\n        '**replies list** - Lists replies'\n      ]\n    ]\n  }\n\n  init () {\n    Object.keys(replies).forEach(elem => {\n      this.hearExpression(elem)\n    })\n  }\n\n  replaceString (string) {\n    let replacements = {\n      '%sender%': this.sender.username,\n      '%server%': this.server.name,\n      '%channel%': this.channel.name\n    }\n    for (let str in replacements) {\n      if (replacements.hasOwnProperty(str)) {\n        string = string.replace(str, replacements[str])\n      }\n    }\n    return string\n  }\n\n  hearExpression (exp) {\n    if (rc.has(this.channel.id)) {\n      this.hears(new RegExp(`\\^${escape(exp)}\\$`, 'i'), () => {\n        let reply = ''\n        let r = replies[exp]\n        if (Array.isArray(replies[exp])) {\n          reply = r[Math.floor(Math.random() * r.length)]\n        } else {\n          reply = r\n        }\n        this.send(this.channel, this.replaceString(reply))\n      })\n    }\n  }\n\n  handle () {\n    this.responds(/^replies list$/i, () => {\n      let reply = []\n      for (let exp in replies) {\n        reply.push(exp)\n      }\n      this.reply([\n        'List of expressions that will trigger a reply:',\n        `\\`ayy, wew, ${reply.join(', ')}\\``\n      ].join('\\n'))\n    })\n\n    this.responds(/^replies$/i, () => {\n      if (rc.has(this.channel.id)) {\n        rc.del(this.channel.id)\n        this.reply('Banned replies on this channel.')\n      } else {\n        rc.push(this.channel.id)\n        this.reply('Allowed replies on this channel.')\n      }\n    })\n\n    if (rc.has(this.channel.id)) {\n      this.hears(/^ay(y+)$/i, matches => {\n        this.send(this.channel, `lma${Array(matches[1].length + 1).join('o')}`)\n      })\n\n      this.hears(/^we(w+)$/i, matches => {\n        this.send(this.channel, `la${Array(matches[1].length + 1).join('d')}`)\n      })\n    }\n  }\n}\n\nmodule.exports = Replies\n"],"sourceRoot":"/Users/AaronTua/Desktop/code/fuyu/src"}